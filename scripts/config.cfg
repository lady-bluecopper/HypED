##### Basic configurations
JVM='java -Xmx120g -XX:-UseGCOverheadLimit -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:NewSize=6g -XX:+CMSParallelRemarkEnabled -XX:+ParallelRefProcEnabled -XX:+CMSClassUnloadingEnabled -cp'
### Classes used to execute the tests
CC_jar='HypED.jar:lib/* eu.centai.hypeq.test.CompareCCStrategies'
BASELINE_jar='HypED.jar:lib/* eu.centai.hypeq.test.CompareWithBaseline'
ALPHAS_jar='HypED.jar:lib/* eu.centai.hypeq.test.CompareImportanceF'
LS_jar='HypED.jar:lib/* eu.centai.hypeq.test.CompareLSStrategies'
HYPERQ_jar='HypED.jar:lib/* eu.centai.hypeq.test.EvaluateQueryTime'
HYPERSQ_jar='HypED.jar:lib/* eu.centai.hypeq.test.EvaluateSQueries'
HYPERC_jar='HypED.jar:lib/* eu.centai.hypeq.test.FindSCentrality'
HYPERK_jar='HypED.jar:lib/* eu.centai.hypeq.test.TopKReachable'
LINE_jar='HypED.jar:lib/* eu.centai.hypeq.test.FindLineGraph'

##### Data and output folders
input_data='./data/'
output_data='./output'
queryFile=''

##### Dataset names
db='db_name'

##### Default values for each dataset [value of L,sample percentage,num queries,lb,max min overlap,save oracle]
db_defaults=10,0.5,100,4,10,true

##### Num Landmarks
db_lands=10,20,100,200

##### Experimental flags
# 1 = compare cc strategies
# 2 = compare with baseline
# 3 = compare alphas/betas
# 4 = compare ls strategies
# 5 = evaluate query time (compute distance profiles for random queries)
# 6 = evaluate query time (compute distance profiles for queries in queryFile)
# 7 = evaluate queries given s (queries loaded from queryFile)
# 8 = find s-centrality for queries in queryFile
# 9 = find top-k reachable elements for queries in queryFile
# 10 = find line graph
db_flags='0,0,0,0,0,0,0,0,0,0'

#### Other parameters
# how to select landmarks within s-ccs (random, degree, farthest, bestcover, between)
landmarkSelection=( degree )
# how to assign landmarks to s-ccs
landmarkAssignment=prob
# importance of s-cc size
alpha=0.2
# importance of s value
beta=0.6
# seed for random objects
seed=10
# type of distance to compute among (edge, vertex, both)
# where both indicates the vertex-to-hyperedge distance
kind=edge
# whether we only want to compute approximate distances 
isApproximate=true
# number of s-closest elements k to retrieve
k=5
